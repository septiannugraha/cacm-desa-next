// Skema Prisma yang Ready ke DB Online


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

// Legacy authentication table from Delphi system (actual structure from Dian's db pull)
model Ta_UserID {
  UserID     String  @id(map: "PK_Ta_UserID") @db.VarChar(50)
  Nama       String? @db.VarChar(50)
  Password   String? @db.VarChar(50)
  Level      String? @db.VarChar(50)
  Keterangan String? @db.VarChar(50)
  IDLevel    String? @db.VarChar(50)
  id         String? @db.VarChar(36)
  Kd_Pemda   String? @db.VarChar(5)
}

// Remote database user table (Dian's CACM_Baru database - uses our schema with bcrypt)
model CACM_User {
  id             String         @id @default(cuid())
  username       String         @unique
  email          String?        @unique
  password       String
  nip            String?        @unique
  name           String
  roleId         String
  pemdaId        String?
  active         Boolean        @default(true)
  lastLogin      DateTime?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  activities     CACM_Activity[]
  assignedAtensi CACM_Atensi[]       @relation("AtensiAssignee")
  reportedAtensi CACM_Atensi[]       @relation("AtensiReporter")
  attachments    CACM_Attachment[]
  auditLogs      CACM_AuditLog[]
  notifications  CACM_Notification[]
  responses      CACM_Response[]
  sessions       CACM_Session[]
  pemda          CACM_Pemda?         @relation(fields: [pemdaId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  role           CACM_Role           @relation(fields: [roleId], references: [id], onUpdate: NoAction)
  userActivities CACM_UserActivity[]

  @@index([username])
  @@index([email])
  @@index([nip])
  @@map("CACM_User")
}

model CACM_Role {
  id          String       @id @default(cuid())
  name        String       @unique
  code        String       @unique
  permissions String       @db.NVarChar(Max)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  users       CACM_User[]

  @@map("CACM_Role")
}

model CACM_Session {
  id           String      @id @default(cuid())
  sessionToken String      @unique
  userId       String
  fiscalYear   Int
  expires      DateTime
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  user         CACM_User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([sessionToken])
  @@index([userId])
  @@map("CACM_Session")
}

model CACM_Pemda {
  id        String       @id @default(cuid())
  name      String
  code      String       @unique
  level     String
  parentId  String?
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  atensi    CACM_Atensi[]
  parent    CACM_Pemda?  @relation("PemdaHierarchy", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children  CACM_Pemda[] @relation("PemdaHierarchy")
  users     CACM_User[]
  villages  CACM_Village[]

  @@index([code])
  @@map("CACM_Pemda")
}

model CACM_Village {
  id        String       @id @default(cuid())
  name      String
  code      String       @unique
  pemdaId   String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  atensi    CACM_Atensi[]
  pemda     CACM_Pemda   @relation(fields: [pemdaId], references: [id], onUpdate: NoAction)

  @@index([code])
  @@map("CACM_Village")
}

model CACM_Atensi {
  id            String              @id @default(cuid())
  code          String              @unique
  title         String
  description   String              @db.NVarChar(Max)
  categoryId    String
  priority      String              @default("MEDIUM")
  status        String              @default("OPEN")
  villageId     String
  pemdaId       String
  fiscalYear    Int
  amount        Float?
  accountCode   String?
  reportedById  String
  assignedToId  String?
  reportedAt    DateTime            @default(now())
  dueDate       DateTime?
  resolvedAt    DateTime?
  closedAt      DateTime?
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
  activities    CACM_Activity[]
  assignedTo    CACM_User?          @relation("AtensiAssignee", fields: [assignedToId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  category      CACM_AtensiCategory @relation(fields: [categoryId], references: [id], onUpdate: NoAction)
  pemda         CACM_Pemda          @relation(fields: [pemdaId], references: [id], onUpdate: NoAction)
  reportedBy    CACM_User           @relation("AtensiReporter", fields: [reportedById], references: [id], onUpdate: NoAction)
  village       CACM_Village        @relation(fields: [villageId], references: [id], onUpdate: NoAction)
  attachments   CACM_Attachment[]
  notifications CACM_Notification[]
  responses     CACM_Response[]

  @@index([code])
  @@index([status])
  @@index([priority])
  @@index([villageId])
  @@index([reportedById])
  @@index([assignedToId])
  @@index([fiscalYear])
  @@map("CACM_Atensi")
}

model CACM_AtensiCategory {
  id          String        @id @default(cuid())
  code        String        @unique
  name        String
  description String?
  color       String?
  icon        String?
  order       Int           @default(0)
  active      Boolean       @default(true)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  atensi      CACM_Atensi[]

  @@index([code])
  @@map("CACM_AtensiCategory")
}

model CACM_Response {
  id          String             @id @default(cuid())
  atensiId    String
  content     String             @db.NVarChar(Max)
  type        String             @default("COMMENT")
  isInternal  Boolean            @default(false)
  createdById String
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  attachments CACM_Attachment[]
  atensi      CACM_Atensi        @relation(fields: [atensiId], references: [id], onDelete: Cascade)
  createdBy   CACM_User          @relation(fields: [createdById], references: [id], onUpdate: NoAction)

  @@index([atensiId])
  @@index([createdById])
  @@map("CACM_Response")
}

model CACM_Attachment {
  id           String         @id @default(cuid())
  filename     String
  originalName String
  mimeType     String
  size         Int
  url          String
  atensiId     String?
  responseId   String?
  uploadedById String
  createdAt    DateTime       @default(now())
  atensi       CACM_Atensi?   @relation(fields: [atensiId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  response     CACM_Response? @relation(fields: [responseId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  uploadedBy   CACM_User      @relation(fields: [uploadedById], references: [id], onUpdate: NoAction)

  @@index([atensiId])
  @@index([responseId])
  @@map("CACM_Attachment")
}

model CACM_Activity {
  id            String      @id @default(cuid())
  atensiId      String
  action        String
  details       String?     @db.NVarChar(Max)
  performedById String
  createdAt     DateTime    @default(now())
  atensi        CACM_Atensi @relation(fields: [atensiId], references: [id], onDelete: Cascade)
  performedBy   CACM_User   @relation(fields: [performedById], references: [id], onUpdate: NoAction)

  @@index([atensiId])
  @@index([performedById])
  @@map("CACM_Activity")
}

model CACM_Notification {
  id        String       @id @default(cuid())
  type      String
  title     String
  message   String
  data      String?      @db.NVarChar(Max)
  read      Boolean      @default(false)
  atensiId  String?
  userId    String
  createdAt DateTime     @default(now())
  atensi    CACM_Atensi? @relation(fields: [atensiId], references: [id], onDelete: Cascade)
  user      CACM_User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([read])
  @@index([atensiId])
  @@map("CACM_Notification")
}

model CACM_UserActivity {
  id        String    @id @default(cuid())
  userId    String
  action    String
  entity    String?
  entityId  String?
  metadata  String?   @db.NVarChar(Max)
  ipAddress String?
  userAgent String?
  timestamp DateTime  @default(now())
  user      CACM_User @relation(fields: [userId], references: [id], onUpdate: NoAction)

  @@index([userId])
  @@index([action])
  @@index([timestamp])
  @@map("CACM_UserActivity")
}

model CACM_AuditLog {
  id        String    @id @default(cuid())
  userId    String
  action    String
  tableName String
  recordId  String
  oldValues String?   @db.NVarChar(Max)
  newValues String?   @db.NVarChar(Max)
  ipAddress String?
  timestamp DateTime  @default(now())
  user      CACM_User @relation(fields: [userId], references: [id], onUpdate: NoAction)

  @@index([userId])
  @@index([tableName])
  @@index([timestamp])
  @@map("CACM_AuditLog")
}

model User {
  id             String         @id @default(cuid())
  username       String         @unique
  email          String?        @unique
  password       String
  nip            String?        @unique
  name           String
  roleId         String
  pemdaId        String?
  active         Boolean        @default(true)
  lastLogin      DateTime?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  activities     Activity[]
  assignedAtensi Atensi[]       @relation("AtensiAssignee")
  reportedAtensi Atensi[]       @relation("AtensiReporter")
  attachments    Attachment[]
  auditLogs      AuditLog[]
  notifications  Notification[]
  responses      Response[]
  sessions       Session[]
  pemda          Pemda?         @relation(fields: [pemdaId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  role           Role           @relation(fields: [roleId], references: [id], onUpdate: NoAction)
  userActivities UserActivity[]

  @@index([username])
  @@index([email])
  @@index([nip])
}

model Role {
  id          String   @id @default(cuid())
  name        String   @unique
  code        String   @unique
  permissions String   @db.NVarChar(Max)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  fiscalYear   Int
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([sessionToken])
  @@index([userId])
}

model Pemda {
  id        String    @id @default(cuid())
  name      String
  code      String    @unique
  level     String
  parentId  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  atensi    Atensi[]
  parent    Pemda?    @relation("PemdaHierarchy", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children  Pemda[]   @relation("PemdaHierarchy")
  users     User[]
  villages  Village[]

  @@index([code])
}

model Village {
  id        String   @id @default(cuid())
  name      String
  code      String   @unique
  pemdaId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  atensi    Atensi[]
  pemda     Pemda    @relation(fields: [pemdaId], references: [id], onUpdate: NoAction)

  @@index([code])
}

model Atensi {
  id            String         @id @default(cuid())
  code          String         @unique
  title         String
  description   String         @db.NVarChar(Max)
  categoryId    String
  priority      String         @default("MEDIUM")
  status        String         @default("OPEN")
  villageId     String
  pemdaId       String
  fiscalYear    Int
  amount        Float?
  accountCode   String?
  reportedById  String
  assignedToId  String?
  reportedAt    DateTime       @default(now())
  dueDate       DateTime?
  resolvedAt    DateTime?
  closedAt      DateTime?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  activities    Activity[]
  assignedTo    User?          @relation("AtensiAssignee", fields: [assignedToId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  category      AtensiCategory @relation(fields: [categoryId], references: [id], onUpdate: NoAction)
  pemda         Pemda          @relation(fields: [pemdaId], references: [id], onUpdate: NoAction)
  reportedBy    User           @relation("AtensiReporter", fields: [reportedById], references: [id], onUpdate: NoAction)
  village       Village        @relation(fields: [villageId], references: [id], onUpdate: NoAction)
  attachments   Attachment[]
  notifications Notification[]
  responses     Response[]

  @@index([code])
  @@index([status])
  @@index([priority])
  @@index([villageId])
  @@index([reportedById])
  @@index([assignedToId])
  @@index([fiscalYear])
}

model AtensiCategory {
  id          String   @id @default(cuid())
  code        String   @unique
  name        String
  description String?
  color       String?
  icon        String?
  order       Int      @default(0)
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  atensi      Atensi[]

  @@index([code])
}

model Response {
  id          String       @id @default(cuid())
  atensiId    String
  content     String       @db.NVarChar(Max)
  type        String       @default("COMMENT")
  isInternal  Boolean      @default(false)
  createdById String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  attachments Attachment[]
  atensi      Atensi       @relation(fields: [atensiId], references: [id], onDelete: Cascade)
  createdBy   User         @relation(fields: [createdById], references: [id], onUpdate: NoAction)

  @@index([atensiId])
  @@index([createdById])
}

model Attachment {
  id           String    @id @default(cuid())
  filename     String
  originalName String
  mimeType     String
  size         Int
  url          String
  atensiId     String?
  responseId   String?
  uploadedById String
  createdAt    DateTime  @default(now())
  atensi       Atensi?   @relation(fields: [atensiId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  response     Response? @relation(fields: [responseId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  uploadedBy   User      @relation(fields: [uploadedById], references: [id], onUpdate: NoAction)

  @@index([atensiId])
  @@index([responseId])
}

model Activity {
  id            String   @id @default(cuid())
  atensiId      String
  action        String
  details       String?  @db.NVarChar(Max)
  performedById String
  createdAt     DateTime @default(now())
  atensi        Atensi   @relation(fields: [atensiId], references: [id], onDelete: Cascade)
  performedBy   User     @relation(fields: [performedById], references: [id], onUpdate: NoAction)

  @@index([atensiId])
  @@index([performedById])
}

model Notification {
  id        String   @id @default(cuid())
  type      String
  title     String
  message   String
  data      String?  @db.NVarChar(Max)
  read      Boolean  @default(false)
  atensiId  String?
  userId    String
  createdAt DateTime @default(now())
  atensi    Atensi?  @relation(fields: [atensiId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([read])
  @@index([atensiId])
}

model UserActivity {
  id        String   @id @default(cuid())
  userId    String
  action    String
  entity    String?
  entityId  String?
  metadata  String?  @db.NVarChar(Max)
  ipAddress String?
  userAgent String?
  timestamp DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onUpdate: NoAction)

  @@index([userId])
  @@index([action])
  @@index([timestamp])
}

model AuditLog {
  id        String   @id @default(cuid())
  userId    String
  action    String
  tableName String
  recordId  String
  oldValues String?  @db.NVarChar(Max)
  newValues String?  @db.NVarChar(Max)
  ipAddress String?
  timestamp DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onUpdate: NoAction)

  @@index([userId])
  @@index([tableName])
  @@index([timestamp])
}

// Village Data Table
model TaDesa {
  id               String?   @db.VarChar(36)
  id_Pemda         String?   @db.VarChar(36)
  Tahun            String    @db.VarChar(4)
  Kd_Pemda         String    @db.VarChar(4)
  Kd_Desa          String    @db.VarChar(12)
  Kd_Kec           String?   @db.VarChar(7)
  Nama_Desa        String?   @db.VarChar(50)
  Nm_Kades         String?   @db.VarChar(50)
  Jbt_Kades        String?   @db.VarChar(50)
  Nm_Sekdes        String?   @db.VarChar(50)
  NIP_Sekdes       String?   @db.VarChar(18)
  Jbt_Sekdes       String?   @db.VarChar(50)
  Nm_Kaur_Keu      String?   @db.VarChar(50)
  Jbt_Kaur_Keu     String?   @db.VarChar(50)
  Nm_Bendahara     String?   @db.VarChar(50)
  Jbt_Bendahara    String?   @db.VarChar(50)
  No_Perdes        String?   @db.VarChar(30)
  Tgl_Perdes       DateTime?
  No_Perdes_PB     String?   @db.VarChar(30)
  Tgl_Perdes_PB    DateTime?
  No_Perdes_PJ     String?   @db.VarChar(30)
  Tgl_Perdes_PJ    DateTime?
  No_Perkades      String?   @db.VarChar(30)
  No_Perkades_PB   String?   @db.VarChar(30)
  Alamat           String?   @db.VarChar(50)
  Ibukota          String?   @db.VarChar(30)
  HP_Kades         String?   @db.VarChar(30)
  Status           String?   @db.VarChar(8)
  NPWP             String?   @db.VarChar(30)
  No_RKPDes        String?   @db.VarChar(30)
  Tgl_RKPDes       DateTime?
  No_RPJMDes       String?   @db.VarChar(30)
  Tgl_RPJMDes      DateTime?
  Visi             String?   @db.NVarChar(Max)
  Misi             String?   @db.NVarChar(Max)
  Tujuan           String?   @db.NVarChar(Max)
  TahunA           String?   @db.NVarChar(4)
  TahunN           String?   @db.NVarChar(4)
  JlhPaket         Float?
  NilaiPaket       Float?
  JlhBukti         Float?
  NilaiBukti       Float?
  JlhManipulasi    Float?
  PersenManipulasi Float?
  create_at        DateTime?
  create_by        String?   @db.VarChar(100)
  update_at        DateTime?
  update_by        String?   @db.VarChar(100)

  @@id([Tahun, Kd_Pemda, Kd_Desa])
  @@index([Tahun])
  @@index([Kd_Desa])
  @@map("Ta_Desa")
}

// APBDes Tables - Revenue (Pendapatan) Realization
model TaAR3RealisasiPendapatan {
  Tahun        Int
  Kd_Pemda     String   @db.VarChar(5)
  No_ST        String   @db.VarChar(20)
  Kd_Desa      String   @db.VarChar(10)
  Kd_Keg       String?  @db.VarChar(20)
  Kd_Rincian   String?  @db.VarChar(20)
  Nama_Obyek   String?  @db.VarChar(255)
  JmlAnggaran  Float?
  JmlRealisasi Float?
  Persen       Float?

  @@id([Tahun, Kd_Pemda, No_ST, Kd_Desa])
  @@index([Tahun])
  @@index([Kd_Desa])
  @@map("Ta_AR3_RealisasiPendapatan")
}

// APBDes Realization Summary Table
model TaAR1RealisasiAPBDes {
  id            String    @db.VarChar(36)
  id_Sample     String    @db.VarChar(36)
  Tahun         String    @db.VarChar(4)
  Kd_Pemda      String    @db.VarChar(4)
  No_ST         String    @db.VarChar(50)
  Kd_Desa       String    @db.VarChar(12)
  NoLap         String    @db.VarChar(10)
  Kelompok      String    @db.VarChar(20)
  Akun          String    @db.VarChar(20)
  Nama_Akun     String?   @db.VarChar(100)
  Nama_Kelompok String?   @db.VarChar(100)
  JmlAnggaran   Float?    @db.Money
  JmlRealisasi  Float?    @db.Money
  persen        Float?
  create_at     DateTime?
  create_by     String?   @db.VarChar(100)
  update_at     DateTime?
  update_by     String?   @db.VarChar(100)

  @@id([Tahun, Kd_Pemda, No_ST, Kd_Desa, NoLap, Kelompok])
  @@index([Tahun, Kd_Pemda])
  @@index([Kd_Desa])
  @@map("Ta_AR1_RealisasiAPBDes")
}

// Reference Tables for Filters
model RefKecamatan {
  Kd_Kec          String  @db.VarChar(20)
  Nama_Kecamatan  String? @db.VarChar(100)

  @@id([Kd_Kec])
  @@map("Ref_Kecamatan")
}

model RefDesa {
  Kd_Desa    String  @db.VarChar(20)
  Nama_Desa  String? @db.VarChar(100)

  @@id([Kd_Desa])
  @@map("Ref_Desa")
}

model RefSumberDana {
  Kode        String  @db.VarChar(10)
  Nama_Sumber String? @db.VarChar(100)
  Urut        Int?

  @@id([Kode])
  @@map("Ref_SumberDana")
}

